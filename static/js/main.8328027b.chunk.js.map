{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectedPostId","setSelectedPostId","className","map","post","key","id","userId","title","type","onClick","BASE_URL","getPostComments","postId","a","fetch","response","json","comments","filteredComments","data","filter","comment","deletePostComment","commentId","url","options","method","addPostComment","name","email","body","JSON","stringify","NewCommentForm","setComments","useState","setName","setEmail","setBody","onSubmit","event","preventDefault","then","placeholder","value","onChange","target","getUserPosts","filteredPosts","getPostDetails","details","PostDetails","selectedPost","setSelectedPost","areCommentsVisible","setCommentsVisible","useEffect","length","App","setPosts","selectedUserId","setSelectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8328027b.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, selectedPostId, setSelectedPostId }) => {\n  const handleClick = (id) => {\n    selectedPostId === id\n      ? setSelectedPostId(0)\n      : setSelectedPostId(id);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>\n                {`[User #${post.userId}]: `}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleClick(post.id)}\n            >\n              {selectedPostId === post.id\n                ? 'Close'\n                : 'Open'\n              }\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: propTypes.arrayOf(propTypes.shape({\n    id: propTypes.number.isRequired,\n    userId: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n  })).isRequired,\n  selectedPostId: propTypes.func.isRequired,\n  setSelectedPostId: propTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments`);\n  const comments = await response.json();\n  const filteredComments = comments.data\n    .filter(comment => comment.postId === postId);\n\n  return filteredComments;\n};\n\nexport const deletePostComment = async(commentId) => {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n  const comments = await fetch(url, options);\n\n  return comments;\n};\n\nexport const addPostComment = async(postId, name, email, body) => {\n  const url = `${BASE_URL}/comments`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  };\n  const comments = await fetch(url, options);\n\n  return comments;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\nimport { addPostComment, getPostComments } from '../../api/comments';\n\nexport const NewCommentForm = ({ selectedPostId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (name && email && body) {\n      addPostComment(selectedPostId, name, email, body)\n        .then(() => getPostComments(selectedPostId))\n        .then(setComments);\n\n      setName('');\n      setEmail('');\n      setBody('');\n    }\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const posts = await response.json();\n  const filteredPosts = posts.data.filter(post => post.userId === userId);\n\n  if (!userId) {\n    return posts.data;\n  }\n\n  return filteredPosts;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const details = await response.json();\n\n  return details.data;\n};\n","import React, { useEffect, useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deletePostComment } from '../../api/comments';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [selectedPost, setSelectedPost] = useState(0);\n  const [comments, setComments] = useState([]);\n  const [areCommentsVisible, setCommentsVisible] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(setSelectedPost);\n    getPostComments(selectedPostId)\n      .then(setComments);\n  }, [selectedPostId]);\n\n  const handleClick = () => {\n    setCommentsVisible(!areCommentsVisible);\n  };\n\n  const handleDelete = (id) => {\n    deletePostComment(id)\n      .then(() => getPostComments(selectedPostId))\n      .then(setComments);\n  };\n\n  if (!selectedPost) {\n    return '';\n  }\n\n  return (\n    selectedPost && (\n      <div className=\"PostDetails\">\n        <h2>Post details:</h2>\n\n        <section className=\"PostDetails__post\">\n          <p>{selectedPost.title}</p>\n          <br />\n          <p>{selectedPost.body}</p>\n        </section>\n\n        {comments && (\n          <section className=\"PostDetails__comments\">\n            {comments.length > 0 && (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={handleClick}\n              >\n                {areCommentsVisible ? 'Hide' : 'Show'}\n                {` ${comments.length} comment`}\n                {comments.length > 1 ? 's' : ''}\n              </button>\n            )}\n\n            {areCommentsVisible && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li className=\"PostDetails__list-item\">\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => handleDelete(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n        )}\n\n        <section>\n          <div className=\"PostDetails__form-wrapper\">\n            <NewCommentForm\n              selectedPostId={selectedPostId}\n              comments={comments}\n              setComments={setComments}\n            />\n          </div>\n        </section>\n      </div>\n    )\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    if (+selectedUserId !== 0) {\n      getUserPosts(+selectedUserId)\n        .then(setPosts);\n    } else {\n      getUserPosts()\n        .then(setPosts);\n    }\n  }, [selectedUserId]);\n\n  const handleChange = (event) => {\n    setSelectedUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={handleChange}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPostId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}